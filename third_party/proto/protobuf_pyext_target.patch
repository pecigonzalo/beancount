diff --git a/BUILD b/BUILD
index a0c93676a..48647cf64 100644
--- a/BUILD
+++ b/BUILD
@@ -561,7 +561,7 @@ GENERIC_TEST_PROTOS = ["src/" + s for s in GENERIC_RELATIVE_TEST_PROTOS]
 
 proto_library(
     name = "generic_test_protos",
-    visibility = ["//:__subpackages__"], 
+    visibility = ["//:__subpackages__"],
     strip_import_prefix = "src",
     srcs = LITE_TEST_PROTOS + GENERIC_TEST_PROTOS,
     deps = [
@@ -858,6 +858,42 @@ cc_binary(
     }),
 )
 
+# Add a public library target to build everything in a single client-side SO.
+cc_library(
+    name = "pyext",
+    visibility = ["//visibility:public"],
+    srcs = glob([
+        "python/google/protobuf/pyext/*.cc",
+        "python/google/protobuf/pyext/*.h",
+    ]),
+    copts = COPTS + [
+        "-DGOOGLE_PROTOBUF_HAS_ONEOF=1",
+    ] + select({
+        "//conditions:default": [],
+        ":allow_oversize_protos": ["-DPROTOBUF_PYTHON_ALLOW_OVERSIZE_PROTOS=1"],
+    }),
+    includes = [
+        "python/",
+        "src/",
+    ],
+    tags = [
+        # Exclude this target from wildcard expansion (//...) because it may
+        # not even be buildable. It will be built if it is needed according
+        # to :use_fast_cpp_protos.
+        # https://docs.bazel.build/versions/master/be/common-definitions.html#common-attributes
+        "manual",
+    ],
+    linkstatic = 1,
+    deps = [
+        ":protobuf",
+        ":proto_api",
+    ] + select({
+        "//conditions:default": [],
+        ":use_fast_cpp_protos": ["//external:python_headers"],
+    }),
+)
+
+
 config_setting(
     name = "use_fast_cpp_protos",
     values = {
@@ -1193,7 +1229,7 @@ java_proto_library(
     name = "test_messages_proto3_java_proto",
     visibility = [
         "//java:__subpackages__",
-    ], 
+    ],
     deps = [":test_messages_proto3_proto"],
 )
 
